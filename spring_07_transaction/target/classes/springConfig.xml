<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://www.springframework.org/schema/aop
                        http://www.springframework.org/schema/aop/spring-aop.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 配置业务 -->
    <bean id="accountService" class="com.saihou.service.impl.AccountServiceImpl">
        <property name="accountDao" ref="accountDao"></property>
    </bean>

    <!-- 配置持久层 -->
    <bean id="accountDao" class="com.saihou.dao.impl.AccountDaoImpl"></bean>

    <!-- 配置数据源 -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"></property>
        <property name="url" value="jdbc:mysql://localhost:3306/test"></property>
        <property name="username" value="root"></property>
        <property name="password" value="admin"></property>
    </bean>

    <!-- Spring中基于XML的声明式事务控制 -->
    <!-- 1.配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!-- 2.配置事务通知 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <!-- 5.配置事务的属性 -->
        <!-- isolation：用于指定事务的隔离级别，默认是DEFAULT，表示使用数据库的默认隔离级别 -->
        <!-- propagation：用于指定事务的传播行为，默认是REQUIRED，表示一定会有事务 -->
        <!-- read-only：用于指定事务是否只读，只有查询方法才能设置为true，默认是false，表示读写 -->
        <!-- timeout：用于指定事务的超时时间，默认值是-1，表示永不超时，如果指定了数值，则以秒为单位 -->
        <!-- no-rollback-for：与rollback-for相反 -->
        <!-- rollback-for：用于指定一个异常，当产生该异常时，事务回滚，产生其他异常时，事务不会滚，没有默认值，表示任何异常都回滚 -->
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED" read-only="false"/>
            <tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
        </tx:attributes>
    </tx:advice>
    <!-- 3.配置AOP中的通用切入点表达式 -->
    <aop:config>
        <aop:pointcut id="ptc" expression="execution(* com.saihou.service.*Service.*(..))"/>
        <!-- 4.建立切入点表达式和事务通知的对应关系 -->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="ptc"></aop:advisor>
    </aop:config>
    
</beans>